### Snort en redhat


sudo dnf update && sudo yum update
sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm -y
sudo subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms
sudo yum upgrade -y
sudo nano /etc/ld.so.conf.d/local.conf  
      /usr/local/lib 
      /usr/local/lib64 

sudo dnf install flex bison gcc gcc-c++ make cmake autoconf libtool git nano unzip wget libpcap-devel pcre-devel libdnet-devel hwloc-devel openssl-devel zlib-devel luajit-devel pkgconfig pkgconf libunwind-devel libnfnetlink-devel libnetfilter_queue-devel libmnl-devel xz-devel gperftools libuuid-devel hyperscan hyperscan-devel  -y

###instalar libdaq
git clone https://github.com/snort3/libdaq.git 
cd libdaq/ 
./bootstrap 
./configure && make && sudo make install 
sudo ldconfig 
cd ../ 

## instalar snort
git clone https://github.com/snort3/snort3.git 
cd snort3 
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH 
export PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig:$PKG_CONFIG_PATH 
export CFLAGS="-O3" 
export CXXFLAGS="-O3 -fno-rtti" 
./configure_cmake.sh --prefix=/usr/local/snort --enable-tcmalloc 

cd build/ 
make -j$(nproc) 
sudo make -j$(nproc) install 
cd ../../ 
sudo ldconfig 
/usr/local/snort/bin/snort
sudo ln -s /usr/local/snort/bin/snort /usr/bin/snort
snort -V

## Configurar snort

sudo nano /usr/local/snort/etc/snort/snort.lua
       HOME_NET = '10.0.0.76/24'

snort -T -c /usr/local/snort/etc/snort/snort.lua

sudo ip link set dev ens160 promisc on

sudo nano /usr/local/snort/etc/snort/local.rules
       alert icmp any any -> any any ( msg:"ICMP Traffic Detected"; sid:10000001; metadata:policy security-ips alert; )

sudo snort -c /usr/local/snort/etc/snort/snort.lua -R /usr/local/snort/etc/snort/local.rules -i ens160 -A alert_fast -s 65535 -k none


# Habilitar y verificar firewalld
sudo systemctl enable --now firewalld
sudo firewall-cmd --state

# Quitar servicios http, ftp, ssh permanentemente
sudo firewall-cmd --permanent --remove-service=http
sudo firewall-cmd --permanent --remove-service=ftp
sudo firewall-cmd --permanent --remove-service=ssh

# Recargar firewalld y listar configuración
sudo firewall-cmd --reload
sudo firewall-cmd --list-all

# Quitar puertos manualmente si están abiertos
sudo firewall-cmd --permanent --remove-port=80/tcp
sudo firewall-cmd --permanent --remove-port=21/tcp
sudo firewall-cmd --permanent --remove-port=22/tcp

sudo firewall-cmd --reload
sudo firewall-cmd --list-all

# Agregar servicios http, ftp, ssh (no te funcionó)
sudo firewall-cmd --permanent --add-service=http
sudo firewall-cmd --permanent --add-service=ftp
sudo firewall-cmd --permanent --add-service=ssh

sudo firewall-cmd --reload
sudo firewall-cmd --list-all

# Agregar puertos directamente (funciona bien)
sudo firewall-cmd --permanent --add-port=80/tcp
sudo firewall-cmd --permanent --add-port=21/tcp
sudo firewall-cmd --permanent --add-port=22/tcp

sudo firewall-cmd --reload
sudo firewall-cmd --list-all

# Repositorios y actualización en Oracle Linux
sudo dnf install -y epel-release
sudo dnf update -y

# Buscar paquetes relacionados a snort
sudo dnf search snort

# Ver repositorios disponibles y habilitados
sudo dnf repolist
sudo dnf config-manager --set-enabled epel
sudo dnf clean all
sudo dnf update

# Ver repositorios en Oracle Linux y habilitar codeready builder
sudo dnf repolist all
sudo dnf config-manager --set-enabled ol8_codeready_builder

# Si dnf config-manager no está, instalarlo
sudo dnf install -y dnf-plugins-core

# Limpiar y regenerar caché
sudo dnf clean all
sudo dnf makecache

# Comprobar versión de Oracle Linux
cat /etc/os-release


# Ver estado del servicio httpd
sudo systemctl status httpd

# Buscar paquetes específicos de snort y relacionados
sudo dnf search snort

# Intentar habilitar repositorio EPEL (ya instalado)
sudo dnf install -y epel-release

# Actualizar sistema
sudo dnf update -y

# Intento de habilitar repositorio RHEL CodeReady (no disponible en Oracle Linux)
sudo subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms

# Alternativa en Oracle Linux para habilitar repositorios
sudo dnf repolist all
sudo dnf config-manager --set-enabled ol8_codeready_builder

# Instalar plugin para dnf config-manager
sudo dnf install -y dnf-plugins-core

# Limpiar caché y regenerar metadatos
sudo dnf clean all
sudo dnf makecache

# Ver información de versión de sistema
cat /etc/os-release

sudo dnf update && sudo yum update

sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm -y

sudo subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms

sudo yum upgrade -y

sudo nano /etc/ld.so.conf.d/local.conf
# Añadir estas líneas:
# /usr/local/lib
# /usr/local/lib64

sudo dnf install flex bison gcc gcc-c++ make cmake autoconf libtool git nano unzip wget libpcap-devel pcre-devel libdnet-devel hwloc-devel openssl-devel zlib-devel luajit-devel pkgconfig pkgconf libunwind-devel libnfnetlink-devel libnetfilter_queue-devel libmnl-devel xz-devel gperftools libuuid-devel hyperscan hyperscan-devel  -y

git clone https://github.com/snort3/libdaq.git 
cd libdaq/ 
./bootstrap 
./configure && make && sudo make install 
sudo ldconfig 
cd ../ 

git clone https://github.com/snort3/snort3.git 
cd snort3 

export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH 
export PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig:$PKG_CONFIG_PATH 
export CFLAGS="-O3" 
export CXXFLAGS="-O3 -fno-rtti" 

./configure_cmake.sh --prefix=/usr/local/snort --enable-tcmalloc 

cd build/ 
make -j$(nproc) 
sudo make -j$(nproc) install 
cd ../../ 
sudo ldconfig 

sudo ln -s /usr/local/snort/bin/snort /usr/bin/snort

snort -V

sudo nano /usr/local/snort/etc/snort/snort.lua
# Modificar HOME_NET:
# HOME_NET = '10.0.0.78/32'

sudo nano /usr/local/snort/etc/snort/local.rules
# Añadir reglas, por ejemplo:
# alert icmp any any -> $HOME_NET any (msg:"ICMP Traffic Detected"; sid:10000001; metadata:policy security-ips alert;)
# alert tcp any any -> $HOME_NET 21 (msg:"FTP Traffic Detected"; sid:10000002; metadata:policy security-ips alert;)
# alert tcp any any -> $HOME_NET 22 (msg:"SSH Traffic Detected"; sid:10000003; metadata:policy security-ips alert;)
# alert tcp any any -> $HOME_NET 80 (msg:"HTTP Traffic Detected"; sid:10000004; metadata:policy security-ips alert;)

sudo ip link set dev ens224 promisc on

sudo snort -c /usr/local/snort/etc/snort/snort.lua -R /usr/local/snort/etc/snort/local.rules -i ens224 -A alert_fast -s 65535 -k none

sudo dnf install -y google-authenticator

# Configurar Google Authenticator para el usuario
su - darwing20242690
google-authenticator
# Responder preguntas y escanear QR con app móvil

# Editar PAM para ssh
sudo nano /etc/pam.d/sshd
# Añadir al principio:
# auth required pam_google_authenticator.so

# Configurar SSH para 2FA
sudo nano /etc/ssh/sshd_config
# Configuraciones clave:
# PasswordAuthentication yes
# ChallengeResponseAuthentication yes
# UsePAM yes
# AuthenticationMethods password,keyboard-interactive

# Reiniciar sshd
sudo systemctl restart sshd

# Probar conexión ssh desde host
ssh darwing20242690@10.0.0.78

# Si problemas de permisos:
# Verificar propietario y permisos del home y archivo
sudo chown darwing20242690:darwing20242690 /home/darwing20242690
sudo chmod 700 /home/darwing20242690

sudo chown darwing20242690:darwing20242690 /home/darwing20242690/.google_authenticator
sudo chmod 400 /home/darwing20242690/.google_authenticator

# Para evitar que pam_google_authenticator modifique el archivo:
echo "DISALLOW_MODIFICATIONS" >> /home/darwing20242690/.google_authenticator

# Ver logs para errores de ssh y PAM
sudo tail -f /var/log/secure

# ========================
# PRACTICA 1: CIFRADO CON GPG2
# ========================
sudo dnf install -y gnupg2
mkdir ~/cifrado
echo "Contenido secreto" > ~/cifrado/secreto.txt
gpg2 -c ~/cifrado/secreto.txt   # Pedirá contraseña para cifrar
cat ~/cifrado/secreto.txt.gpg   # Ver contenido cifrado (ilegible)
gpg2 ~/cifrado/secreto.txt.gpg  # Descifrar (pedirá contraseña)
cat ~/cifrado/secreto.txt       # Verificar contenido

# ========================
# PRACTICA 2: FIREWALL E IPTABLES
# ========================

# Habilitar servicios en firewall-cmd
sudo firewall-cmd --permanent --add-service=http
sudo firewall-cmd --permanent --add-service=ftp
sudo firewall-cmd --permanent --add-service=ssh
sudo firewall-cmd --reload
sudo firewall-cmd --list-all

# Bloquear puertos con iptables
sudo iptables -A INPUT -p tcp --dport 80 -j DROP
sudo iptables -A INPUT -p tcp --dport 21 -j DROP
sudo iptables -A INPUT -p tcp --dport 22 -j DROP
sudo iptables -L -n -v

# Habilitar nuevamente puertos con iptables
sudo iptables -D INPUT -p tcp --dport 80 -j DROP
sudo iptables -D INPUT -p tcp --dport 21 -j DROP
sudo iptables -D INPUT -p tcp --dport 22 -j DROP

# Bloquear con firewall-cmd
sudo firewall-cmd --permanent --remove-service=http
sudo firewall-cmd --permanent --remove-service=ftp
sudo firewall-cmd --permanent --remove-service=ssh
sudo firewall-cmd --reload

# Habilitar nuevamente
sudo firewall-cmd --permanent --add-service=http
sudo firewall-cmd --permanent --add-service=ftp
sudo firewall-cmd --permanent --add-service=ssh
sudo firewall-cmd --reload

# ========================
# PRACTICA 3: INSTALACION DE SNORT 3 EN RHEL/ORACLE
# ========================

# Actualizar y habilitar repos
sudo dnf update -y
sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm -y
sudo dnf config-manager --set-enabled ol8_codeready_builder
sudo dnf install -y dnf-plugins-core

# Instalar dependencias
sudo dnf install flex bison gcc gcc-c++ make cmake autoconf libtool git nano unzip wget \
libpcap-devel pcre-devel libdnet-devel hwloc-devel openssl-devel zlib-devel luajit-devel \
pkgconfig pkgconf libunwind-devel libnfnetlink-devel libnetfilter_queue-devel libmnl-devel \
xz-devel gperftools libuuid-devel hyperscan hyperscan-devel -y

# Instalar libdaq
git clone https://github.com/snort3/libdaq.git
cd libdaq/
./bootstrap
./configure && make && sudo make install
sudo ldconfig
cd ..

# Instalar snort3
git clone https://github.com/snort3/snort3.git
cd snort3
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
export PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig:$PKG_CONFIG_PATH
export CFLAGS="-O3"
export CXXFLAGS="-O3 -fno-rtti"
./configure_cmake.sh --prefix=/usr/local/snort --enable-tcmalloc
cd build/
make -j$(nproc)
sudo make -j$(nproc) install
cd ../..
sudo ldconfig
sudo ln -s /usr/local/snort/bin/snort /usr/bin/snort
snort -V

# Configuración snort
sudo nano /usr/local/snort/etc/snort/snort.lua
# Cambiar HOME_NET a la IP de tu servidor:
# HOME_NET = '10.0.0.78/32'

sudo nano /usr/local/snort/etc/snort/local.rules
# Añadir reglas:
# alert icmp any any -> $HOME_NET any (msg:"ICMP Traffic Detected"; sid:10000001;)
# alert tcp any any -> $HOME_NET 21 (msg:"FTP Traffic Detected"; sid:10000002;)
# alert tcp any any -> $HOME_NET 22 (msg:"SSH Traffic Detected"; sid:10000003;)
# alert tcp any any -> $HOME_NET 80 (msg:"HTTP Traffic Detected"; sid:10000004;)

sudo ip link set dev ens224 promisc on
sudo snort -c /usr/local/snort/etc/snort/snort.lua -R /usr/local/snort/etc/snort/local.rules \
-i ens224 -A alert_fast -s 65535 -k none

# ========================
# PRACTICA 4: GOOGLE AUTHENTICATOR EN SSH
# ========================
sudo dnf install -y google-authenticator
su - tu_usuario
google-authenticator   # Configurar y escanear QR

# Editar PAM
sudo nano /etc/pam.d/sshd
# Añadir al inicio:
# auth required pam_google_authenticator.so

# Configurar SSH
sudo nano /etc/ssh/sshd_config
# Cambiar/añadir:
# PasswordAuthentication yes
# ChallengeResponseAuthentication yes
# UsePAM yes
# AuthenticationMethods password,keyboard-interactive

sudo systemctl restart sshd
# Instalar dependencias
sudo dnf install -y snort snort-rules-default

# Crear directorio de logs (si no existe)
sudo mkdir -p /var/log/snort
sudo chown snort:snort /var/log/snort

# Copiar archivo de configuración base
sudo cp /etc/snort/snort.lua /etc/snort/snort_custom.lua
sudo nano /etc/snort/snort_custom.lua

-- Detectar SSH (22)
alert tcp any any -> any 22 (msg:"SSH connection detected"; sid:1000001; rev:1;)

-- Detectar HTTP (80)
alert tcp any any -> any 80 (msg:"HTTP connection detected"; sid:1000002; rev:1;)

-- Detectar ICMP
alert icmp any any -> any any (msg:"ICMP packet detected"; sid:1000003; rev:1;)

sudo snort -A console -c /etc/snort/snort_custom.lua -i eth0

# Iniciar y habilitar firewalld
sudo systemctl enable --now firewalld

# Bloquear SSH, HTTP y SMB (22, 80, 445)
sudo firewall-cmd --permanent --add-port=22/tcp --remove-port=22/tcp
sudo firewall-cmd --permanent --add-port=80/tcp --remove-port=80/tcp
sudo firewall-cmd --permanent --add-port=445/tcp --remove-port=445/tcp

# Bloquear ICMP (ping)
sudo firewall-cmd --permanent --add-icmp-block=echo-request

# Aplicar cambios
sudo firewall-cmd --reload

# Verificar reglas aplicadas
sudo firewall-cmd --list-all

# SSH
ssh usuario@IP_ORACLE_LINUX

# HTTP
curl http://IP_ORACLE_LINUX

# ICMP
ping IP_ORACLE_LINUX


